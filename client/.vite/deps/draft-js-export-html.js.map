{
  "version": 3,
  "sources": ["../../node_modules/draft-js-export-html/esm/helpers/combineOrderedStyles.js", "../../node_modules/draft-js-export-html/esm/helpers/normalizeAttributes.js", "../../node_modules/draft-js-export-html/esm/helpers/styleToCSS.js", "../../node_modules/draft-js-utils/esm/Constants.js", "../../node_modules/draft-js-utils/esm/getEntityRanges.js", "../../node_modules/draft-js-utils/esm/callModifierForSelectedBlocks.js", "../../node_modules/draft-js-export-html/esm/stateToHTML.js"],
  "sourcesContent": ["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction combineOrderedStyles(customMap, defaults) {\n  if (customMap == null) {\n    return defaults;\n  }\n\n  var _defaults = _slicedToArray(defaults, 2),\n      defaultStyleMap = _defaults[0],\n      defaultStyleOrder = _defaults[1];\n\n  var styleMap = _objectSpread({}, defaultStyleMap);\n\n  var styleOrder = _toConsumableArray(defaultStyleOrder);\n\n  for (var _i2 = 0, _Object$keys = Object.keys(customMap); _i2 < _Object$keys.length; _i2++) {\n    var _styleName = _Object$keys[_i2];\n\n    if (defaultStyleMap.hasOwnProperty(_styleName)) {\n      var defaultStyles = defaultStyleMap[_styleName];\n      styleMap[_styleName] = _objectSpread({}, defaultStyles, {}, customMap[_styleName]);\n    } else {\n      styleMap[_styleName] = customMap[_styleName];\n      styleOrder.push(_styleName);\n    }\n  }\n\n  return [styleMap, styleOrder];\n}\n\nexport default combineOrderedStyles;", "// Lifted from: https://github.com/facebook/react/blob/master/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\nvar ATTR_NAME_MAP = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv'\n};\n\nfunction normalizeAttributes(attributes) {\n  if (attributes == null) {\n    return attributes;\n  }\n\n  var normalized = {};\n  var didNormalize = false;\n\n  for (var _i = 0, _Object$keys = Object.keys(attributes); _i < _Object$keys.length; _i++) {\n    var name = _Object$keys[_i];\n    var newName = name;\n\n    if (ATTR_NAME_MAP.hasOwnProperty(name)) {\n      newName = ATTR_NAME_MAP[name];\n      didNormalize = true;\n    }\n\n    normalized[newName] = attributes[name];\n  }\n\n  return didNormalize ? normalized : attributes;\n}\n\nexport default normalizeAttributes;", "var VENDOR_PREFIX = /^(moz|ms|o|webkit)-/;\nvar NUMERIC_STRING = /^\\d+$/;\nvar UPPERCASE_PATTERN = /([A-Z])/g; // Lifted from:\n// https://github.com/facebook/react/blob/ab4ddf64939aebbbc8d31be1022efd56e834c95c/src/renderers/dom/shared/CSSProperty.js\n\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n}; // Lifted from: https://github.com/facebook/react/blob/master/src/renderers/dom/shared/CSSPropertyOperations.js\n\nfunction processStyleName(name) {\n  return name.replace(UPPERCASE_PATTERN, '-$1').toLowerCase().replace(VENDOR_PREFIX, '-$1-');\n} // Lifted from: https://github.com/facebook/react/blob/master/src/renderers/dom/shared/dangerousStyleValue.js\n\n\nfunction processStyleValue(name, value) {\n  var isNumeric;\n\n  if (typeof value === 'string') {\n    isNumeric = NUMERIC_STRING.test(value);\n  } else {\n    isNumeric = true;\n    value = String(value);\n  }\n\n  if (!isNumeric || value === '0' || isUnitlessNumber[name] === true) {\n    return value;\n  } else {\n    return value + 'px';\n  }\n}\n\nfunction styleToCSS(styleDescr) {\n  return Object.keys(styleDescr).map(function (name) {\n    var styleValue = processStyleValue(name, styleDescr[name]);\n    var styleName = processStyleName(name);\n    return \"\".concat(styleName, \": \").concat(styleValue);\n  }).join('; ');\n}\n\nexport default styleToCSS;", "export var BLOCK_TYPE = {\n  // This is used to represent a normal text block (paragraph).\n  UNSTYLED: 'unstyled',\n  HEADER_ONE: 'header-one',\n  HEADER_TWO: 'header-two',\n  HEADER_THREE: 'header-three',\n  HEADER_FOUR: 'header-four',\n  HEADER_FIVE: 'header-five',\n  HEADER_SIX: 'header-six',\n  UNORDERED_LIST_ITEM: 'unordered-list-item',\n  ORDERED_LIST_ITEM: 'ordered-list-item',\n  BLOCKQUOTE: 'blockquote',\n  PULLQUOTE: 'pullquote',\n  CODE: 'code-block',\n  ATOMIC: 'atomic'\n};\nexport var ENTITY_TYPE = {\n  LINK: 'LINK',\n  IMAGE: 'IMAGE',\n  EMBED: 'embed'\n};\nexport var INLINE_STYLE = {\n  BOLD: 'BOLD',\n  CODE: 'CODE',\n  ITALIC: 'ITALIC',\n  STRIKETHROUGH: 'STRIKETHROUGH',\n  UNDERLINE: 'UNDERLINE'\n};\nexport default {\n  BLOCK_TYPE: BLOCK_TYPE,\n  ENTITY_TYPE: ENTITY_TYPE,\n  INLINE_STYLE: INLINE_STYLE\n};", "import { OrderedSet, is } from 'immutable';\nexport var EMPTY_SET = new OrderedSet();\nexport default function getEntityRanges(text, charMetaList) {\n  var charEntity = null;\n  var prevCharEntity = null;\n  var ranges = [];\n  var rangeStart = 0;\n\n  for (var i = 0, len = text.length; i < len; i++) {\n    prevCharEntity = charEntity;\n    var meta = charMetaList.get(i);\n    charEntity = meta ? meta.getEntity() : null;\n\n    if (i > 0 && charEntity !== prevCharEntity) {\n      ranges.push([prevCharEntity, getStyleRanges(text.slice(rangeStart, i), charMetaList.slice(rangeStart, i))]);\n      rangeStart = i;\n    }\n  }\n\n  ranges.push([charEntity, getStyleRanges(text.slice(rangeStart), charMetaList.slice(rangeStart))]);\n  return ranges;\n}\n\nfunction getStyleRanges(text, charMetaList) {\n  var charStyle = EMPTY_SET;\n  var prevCharStyle = EMPTY_SET;\n  var ranges = [];\n  var rangeStart = 0;\n\n  for (var i = 0, len = text.length; i < len; i++) {\n    prevCharStyle = charStyle;\n    var meta = charMetaList.get(i);\n    charStyle = meta ? meta.getStyle() : EMPTY_SET;\n\n    if (i > 0 && !is(charStyle, prevCharStyle)) {\n      ranges.push([text.slice(rangeStart, i), prevCharStyle]);\n      rangeStart = i;\n    }\n  }\n\n  ranges.push([text.slice(rangeStart), charStyle]);\n  return ranges;\n}", "import { EditorState, SelectionState } from 'draft-js';\nimport getSelectedBlocks from './getSelectedBlocks';\n/**\n * Calls a provided `modifier` function with a selection for each\n * selected block in the current editor selection. Passes through additional\n * arguments to the modifier.\n *\n * Note: At the moment it will retain the original selection and override\n * possible selection changes from modifiers\n *\n * @param  {object} editorState The current draft.js editor state object\n *\n * @param  {function} modifier  A modifier function to be executed.\n *                              Must have the signature (editorState, selection, ...)\n *\n * @param  {mixed} ...args      Additional arguments to be passed through to the modifier\n *\n * @return {object} The new editor state\n */\n\nexport default (function (editorState, modifier) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var contentState = editorState.getCurrentContent();\n  var currentSelection = editorState.getSelection();\n  var startKey = currentSelection.getStartKey();\n  var endKey = currentSelection.getEndKey();\n  var startOffset = currentSelection.getStartOffset();\n  var endOffset = currentSelection.getEndOffset();\n  var isSameBlock = startKey === endKey;\n  var selectedBlocks = getSelectedBlocks(contentState, startKey, endKey);\n  var finalEditorState = editorState;\n  selectedBlocks.forEach(function (block) {\n    var currentBlockKey = block.getKey();\n    var selectionStart = startOffset;\n    var selectionEnd = endOffset;\n\n    if (currentBlockKey === startKey) {\n      selectionStart = startOffset;\n      selectionEnd = isSameBlock ? endOffset : block.getText().length;\n    } else if (currentBlockKey === endKey) {\n      selectionStart = isSameBlock ? startOffset : 0;\n      selectionEnd = endOffset;\n    } else {\n      selectionStart = 0;\n      selectionEnd = block.getText().length;\n    }\n\n    var selection = new SelectionState({\n      anchorKey: currentBlockKey,\n      anchorOffset: selectionStart,\n      focusKey: currentBlockKey,\n      focusOffset: selectionEnd\n    });\n    finalEditorState = modifier.apply(void 0, [finalEditorState, selection].concat(args));\n  });\n  return EditorState.forceSelection(finalEditorState, currentSelection);\n});", "var _DEFAULT_STYLE_MAP, _ENTITY_ATTR_MAP, _DATA_TO_ATTR;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport combineOrderedStyles from './helpers/combineOrderedStyles';\nimport normalizeAttributes from './helpers/normalizeAttributes';\nimport styleToCSS from './helpers/styleToCSS';\nimport { getEntityRanges, BLOCK_TYPE, ENTITY_TYPE, INLINE_STYLE } from 'draft-js-utils';\nvar BOLD = INLINE_STYLE.BOLD,\n    CODE = INLINE_STYLE.CODE,\n    ITALIC = INLINE_STYLE.ITALIC,\n    STRIKETHROUGH = INLINE_STYLE.STRIKETHROUGH,\n    UNDERLINE = INLINE_STYLE.UNDERLINE;\nvar INDENT = '  ';\nvar BREAK = '<br>';\nvar DATA_ATTRIBUTE = /^data-([a-z0-9-]+)$/;\nvar DEFAULT_STYLE_MAP = (_DEFAULT_STYLE_MAP = {}, _defineProperty(_DEFAULT_STYLE_MAP, BOLD, {\n  element: 'strong'\n}), _defineProperty(_DEFAULT_STYLE_MAP, CODE, {\n  element: 'code'\n}), _defineProperty(_DEFAULT_STYLE_MAP, ITALIC, {\n  element: 'em'\n}), _defineProperty(_DEFAULT_STYLE_MAP, STRIKETHROUGH, {\n  element: 'del'\n}), _defineProperty(_DEFAULT_STYLE_MAP, UNDERLINE, {\n  element: 'u'\n}), _DEFAULT_STYLE_MAP); // Order: inner-most style to outer-most.\n// Examle: <em><strong>foo</strong></em>\n\nvar DEFAULT_STYLE_ORDER = [BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE]; // Map entity data to element attributes.\n\nvar ENTITY_ATTR_MAP = (_ENTITY_ATTR_MAP = {}, _defineProperty(_ENTITY_ATTR_MAP, ENTITY_TYPE.LINK, {\n  url: 'href',\n  href: 'href',\n  rel: 'rel',\n  target: 'target',\n  title: 'title',\n  className: 'class'\n}), _defineProperty(_ENTITY_ATTR_MAP, ENTITY_TYPE.IMAGE, {\n  src: 'src',\n  height: 'height',\n  width: 'width',\n  alt: 'alt',\n  className: 'class'\n}), _ENTITY_ATTR_MAP); // Map entity data to element attributes.\n\nvar DATA_TO_ATTR = (_DATA_TO_ATTR = {}, _defineProperty(_DATA_TO_ATTR, ENTITY_TYPE.LINK, function (entityType, entity) {\n  var attrMap = ENTITY_ATTR_MAP.hasOwnProperty(entityType) ? ENTITY_ATTR_MAP[entityType] : {};\n  var data = entity.getData();\n  var attrs = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(data); _i < _Object$keys.length; _i++) {\n    var dataKey = _Object$keys[_i];\n    var dataValue = data[dataKey];\n\n    if (attrMap.hasOwnProperty(dataKey)) {\n      var attrKey = attrMap[dataKey];\n      attrs[attrKey] = dataValue;\n    } else if (DATA_ATTRIBUTE.test(dataKey)) {\n      attrs[dataKey] = dataValue;\n    }\n  }\n\n  return attrs;\n}), _defineProperty(_DATA_TO_ATTR, ENTITY_TYPE.IMAGE, function (entityType, entity) {\n  var attrMap = ENTITY_ATTR_MAP.hasOwnProperty(entityType) ? ENTITY_ATTR_MAP[entityType] : {};\n  var data = entity.getData();\n  var attrs = {};\n\n  for (var _i2 = 0, _Object$keys2 = Object.keys(data); _i2 < _Object$keys2.length; _i2++) {\n    var dataKey = _Object$keys2[_i2];\n    var dataValue = data[dataKey];\n\n    if (attrMap.hasOwnProperty(dataKey)) {\n      var attrKey = attrMap[dataKey];\n      attrs[attrKey] = dataValue;\n    } else if (DATA_ATTRIBUTE.test(dataKey)) {\n      attrs[dataKey] = dataValue;\n    }\n  }\n\n  return attrs;\n}), _DATA_TO_ATTR); // The reason this returns an array is because a single block might get wrapped\n// in two tags.\n\nfunction getTags(blockType, defaultBlockTag) {\n  switch (blockType) {\n    case BLOCK_TYPE.HEADER_ONE:\n      return ['h1'];\n\n    case BLOCK_TYPE.HEADER_TWO:\n      return ['h2'];\n\n    case BLOCK_TYPE.HEADER_THREE:\n      return ['h3'];\n\n    case BLOCK_TYPE.HEADER_FOUR:\n      return ['h4'];\n\n    case BLOCK_TYPE.HEADER_FIVE:\n      return ['h5'];\n\n    case BLOCK_TYPE.HEADER_SIX:\n      return ['h6'];\n\n    case BLOCK_TYPE.UNORDERED_LIST_ITEM:\n    case BLOCK_TYPE.ORDERED_LIST_ITEM:\n      return ['li'];\n\n    case BLOCK_TYPE.BLOCKQUOTE:\n      return ['blockquote'];\n\n    case BLOCK_TYPE.CODE:\n      return ['pre', 'code'];\n\n    case BLOCK_TYPE.ATOMIC:\n      return ['figure'];\n\n    default:\n      if (defaultBlockTag === null) {\n        return [];\n      }\n\n      return [defaultBlockTag || 'p'];\n  }\n}\n\nfunction getWrapperTag(blockType) {\n  switch (blockType) {\n    case BLOCK_TYPE.UNORDERED_LIST_ITEM:\n      return 'ul';\n\n    case BLOCK_TYPE.ORDERED_LIST_ITEM:\n      return 'ol';\n\n    default:\n      return null;\n  }\n}\n\nvar MarkupGenerator =\n/*#__PURE__*/\nfunction () {\n  // These are related to state.\n  // These are related to user-defined options.\n  function MarkupGenerator(contentState, options) {\n    _classCallCheck(this, MarkupGenerator);\n\n    _defineProperty(this, \"blocks\", void 0);\n\n    _defineProperty(this, \"contentState\", void 0);\n\n    _defineProperty(this, \"currentBlock\", void 0);\n\n    _defineProperty(this, \"indentLevel\", void 0);\n\n    _defineProperty(this, \"output\", void 0);\n\n    _defineProperty(this, \"totalBlocks\", void 0);\n\n    _defineProperty(this, \"wrapperTag\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"inlineStyles\", void 0);\n\n    _defineProperty(this, \"inlineStyleFn\", void 0);\n\n    _defineProperty(this, \"styleOrder\", void 0);\n\n    if (options == null) {\n      options = {};\n    }\n\n    this.contentState = contentState;\n    this.options = options;\n\n    var _combineOrderedStyles = combineOrderedStyles(options.inlineStyles, [DEFAULT_STYLE_MAP, DEFAULT_STYLE_ORDER]),\n        _combineOrderedStyles2 = _slicedToArray(_combineOrderedStyles, 2),\n        inlineStyles = _combineOrderedStyles2[0],\n        styleOrder = _combineOrderedStyles2[1];\n\n    this.inlineStyles = inlineStyles;\n    this.inlineStyleFn = options.inlineStyleFn;\n    this.styleOrder = styleOrder;\n  }\n\n  _createClass(MarkupGenerator, [{\n    key: \"generate\",\n    value: function generate() {\n      this.output = [];\n      this.blocks = this.contentState.getBlocksAsArray();\n      this.totalBlocks = this.blocks.length;\n      this.currentBlock = 0;\n      this.indentLevel = 0;\n      this.wrapperTag = null;\n\n      while (this.currentBlock < this.totalBlocks) {\n        this.processBlock();\n      }\n\n      this.closeWrapperTag();\n      return this.output.join('').trim();\n    }\n  }, {\n    key: \"processBlock\",\n    value: function processBlock() {\n      var _this$options = this.options,\n          blockRenderers = _this$options.blockRenderers,\n          defaultBlockTag = _this$options.defaultBlockTag;\n      var block = this.blocks[this.currentBlock];\n      var blockType = block.getType();\n      var newWrapperTag = getWrapperTag(blockType);\n\n      if (this.wrapperTag !== newWrapperTag) {\n        if (this.wrapperTag) {\n          this.closeWrapperTag();\n        }\n\n        if (newWrapperTag) {\n          this.openWrapperTag(newWrapperTag);\n        }\n      }\n\n      this.indent(); // Allow blocks to be rendered using a custom renderer.\n\n      var customRenderer = blockRenderers != null && blockRenderers.hasOwnProperty(blockType) ? blockRenderers[blockType] : null;\n      var customRendererOutput = customRenderer ? customRenderer(block) : null; // Renderer can return null, which will cause processing to continue as normal.\n\n      if (customRendererOutput != null) {\n        this.output.push(customRendererOutput);\n        this.output.push('\\n');\n        this.currentBlock += 1;\n        return;\n      }\n\n      this.writeStartTag(block, defaultBlockTag);\n      this.output.push(this.renderBlockContent(block)); // Look ahead and see if we will nest list.\n\n      var nextBlock = this.getNextBlock();\n\n      if (canHaveDepth(blockType) && nextBlock && nextBlock.getDepth() === block.getDepth() + 1) {\n        this.output.push('\\n'); // This is a litle hacky: temporarily stash our current wrapperTag and\n        // render child list(s).\n\n        var thisWrapperTag = this.wrapperTag;\n        this.wrapperTag = null;\n        this.indentLevel += 1;\n        this.currentBlock += 1;\n        this.processBlocksAtDepth(nextBlock.getDepth());\n        this.wrapperTag = thisWrapperTag;\n        this.indentLevel -= 1;\n        this.indent();\n      } else {\n        this.currentBlock += 1;\n      }\n\n      this.writeEndTag(block, defaultBlockTag);\n    }\n  }, {\n    key: \"processBlocksAtDepth\",\n    value: function processBlocksAtDepth(depth) {\n      var block = this.blocks[this.currentBlock];\n\n      while (block && block.getDepth() === depth) {\n        this.processBlock();\n        block = this.blocks[this.currentBlock];\n      }\n\n      this.closeWrapperTag();\n    }\n  }, {\n    key: \"getNextBlock\",\n    value: function getNextBlock() {\n      return this.blocks[this.currentBlock + 1];\n    }\n  }, {\n    key: \"writeStartTag\",\n    value: function writeStartTag(block, defaultBlockTag) {\n      var tags = getTags(block.getType(), defaultBlockTag);\n      var attrString;\n\n      if (this.options.blockStyleFn) {\n        var _ref = this.options.blockStyleFn(block) || {},\n            attributes = _ref.attributes,\n            _style = _ref.style; // Normalize `className` -> `class`, etc.\n\n\n        attributes = normalizeAttributes(attributes);\n\n        if (_style != null) {\n          var styleAttr = styleToCSS(_style);\n          attributes = attributes == null ? {\n            style: styleAttr\n          } : _objectSpread({}, attributes, {\n            style: styleAttr\n          });\n        }\n\n        attrString = stringifyAttrs(attributes);\n      } else {\n        attrString = '';\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = tags[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var tag = _step.value;\n          this.output.push(\"<\".concat(tag).concat(attrString, \">\"));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"writeEndTag\",\n    value: function writeEndTag(block, defaultBlockTag) {\n      var tags = getTags(block.getType(), defaultBlockTag);\n\n      if (tags.length === 1) {\n        this.output.push(\"</\".concat(tags[0], \">\\n\"));\n      } else {\n        var output = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = tags[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var tag = _step2.value;\n            output.unshift(\"</\".concat(tag, \">\"));\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        this.output.push(output.join('') + '\\n');\n      }\n    }\n  }, {\n    key: \"openWrapperTag\",\n    value: function openWrapperTag(wrapperTag) {\n      this.wrapperTag = wrapperTag;\n      this.indent();\n      this.output.push(\"<\".concat(wrapperTag, \">\\n\"));\n      this.indentLevel += 1;\n    }\n  }, {\n    key: \"closeWrapperTag\",\n    value: function closeWrapperTag() {\n      var wrapperTag = this.wrapperTag;\n\n      if (wrapperTag) {\n        this.indentLevel -= 1;\n        this.indent();\n        this.output.push(\"</\".concat(wrapperTag, \">\\n\"));\n        this.wrapperTag = null;\n      }\n    }\n  }, {\n    key: \"indent\",\n    value: function indent() {\n      this.output.push(INDENT.repeat(this.indentLevel));\n    }\n  }, {\n    key: \"withCustomInlineStyles\",\n    value: function withCustomInlineStyles(content, styleSet) {\n      if (!this.inlineStyleFn) {\n        return content;\n      }\n\n      var renderConfig = this.inlineStyleFn(styleSet);\n\n      if (!renderConfig) {\n        return content;\n      }\n\n      var _renderConfig$element = renderConfig.element,\n          element = _renderConfig$element === void 0 ? 'span' : _renderConfig$element,\n          attributes = renderConfig.attributes,\n          style = renderConfig.style;\n      var attrString = stringifyAttrs(_objectSpread({}, attributes, {\n        style: style && styleToCSS(style)\n      }));\n      return \"<\".concat(element).concat(attrString, \">\").concat(content, \"</\").concat(element, \">\");\n    }\n  }, {\n    key: \"renderBlockContent\",\n    value: function renderBlockContent(block) {\n      var _this = this;\n\n      var blockType = block.getType();\n      var text = block.getText();\n\n      if (text === '') {\n        // Prevent element collapse if completely empty.\n        return BREAK;\n      }\n\n      text = this.preserveWhitespace(text);\n      var charMetaList = block.getCharacterList();\n      var entityPieces = getEntityRanges(text, charMetaList);\n      return entityPieces.map(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            entityKey = _ref3[0],\n            stylePieces = _ref3[1];\n\n        var content = stylePieces.map(function (_ref4) {\n          var _ref5 = _slicedToArray(_ref4, 2),\n              text = _ref5[0],\n              styleSet = _ref5[1];\n\n          var content = encodeContent(text);\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = _this.styleOrder[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var _styleName = _step3.value;\n\n              // If our block type is CODE then don't wrap inline code elements.\n              if (_styleName === CODE && blockType === BLOCK_TYPE.CODE) {\n                continue;\n              }\n\n              if (styleSet.has(_styleName)) {\n                var _this$inlineStyles$_s = _this.inlineStyles[_styleName],\n                    element = _this$inlineStyles$_s.element,\n                    attributes = _this$inlineStyles$_s.attributes,\n                    _style2 = _this$inlineStyles$_s.style;\n\n                if (element == null) {\n                  element = 'span';\n                } // Normalize `className` -> `class`, etc.\n\n\n                attributes = normalizeAttributes(attributes);\n\n                if (_style2 != null) {\n                  var styleAttr = styleToCSS(_style2);\n                  attributes = attributes == null ? {\n                    style: styleAttr\n                  } : _objectSpread({}, attributes, {\n                    style: styleAttr\n                  });\n                }\n\n                var attrString = stringifyAttrs(attributes);\n                content = \"<\".concat(element).concat(attrString, \">\").concat(content, \"</\").concat(element, \">\");\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                _iterator3[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          return _this.withCustomInlineStyles(content, styleSet);\n        }).join('');\n        var entity = entityKey ? _this.contentState.getEntity(entityKey) : null; // Note: The `toUpperCase` below is for compatability with some libraries that use lower-case for image blocks.\n\n        var entityType = entity == null ? null : entity.getType().toUpperCase();\n        var entityStyle;\n\n        if (entity != null && _this.options.entityStyleFn && (entityStyle = _this.options.entityStyleFn(entity))) {\n          var _entityStyle = entityStyle,\n              element = _entityStyle.element,\n              attributes = _entityStyle.attributes,\n              _style3 = _entityStyle.style;\n\n          if (element == null) {\n            element = 'span';\n          } // Normalize `className` -> `class`, etc.\n\n\n          attributes = normalizeAttributes(attributes);\n\n          if (_style3 != null) {\n            var styleAttr = styleToCSS(_style3);\n            attributes = attributes == null ? {\n              style: styleAttr\n            } : _objectSpread({}, attributes, {\n              style: styleAttr\n            });\n          }\n\n          var attrString = stringifyAttrs(attributes);\n          return \"<\".concat(element).concat(attrString, \">\").concat(content, \"</\").concat(element, \">\");\n        } else if (entityType != null && entityType === ENTITY_TYPE.LINK) {\n          var attrs = DATA_TO_ATTR.hasOwnProperty(entityType) ? DATA_TO_ATTR[entityType](entityType, entity) : null;\n\n          var _attrString = stringifyAttrs(attrs);\n\n          return \"<a\".concat(_attrString, \">\").concat(content, \"</a>\");\n        } else if (entityType != null && entityType === ENTITY_TYPE.IMAGE) {\n          var _attrs = DATA_TO_ATTR.hasOwnProperty(entityType) ? DATA_TO_ATTR[entityType](entityType, entity) : null;\n\n          var _attrString2 = stringifyAttrs(_attrs);\n\n          return \"<img\".concat(_attrString2, \"/>\");\n        } else {\n          return content;\n        }\n      }).join('');\n    }\n  }, {\n    key: \"preserveWhitespace\",\n    value: function preserveWhitespace(text) {\n      var length = text.length; // Prevent leading/trailing/consecutive whitespace collapse.\n\n      var newText = new Array(length);\n\n      for (var i = 0; i < length; i++) {\n        if (text[i] === ' ' && (i === 0 || i === length - 1 || text[i - 1] === ' ')) {\n          newText[i] = '\\xA0';\n        } else {\n          newText[i] = text[i];\n        }\n      }\n\n      return newText.join('');\n    }\n  }]);\n\n  return MarkupGenerator;\n}();\n\nfunction stringifyAttrs(attrs) {\n  if (attrs == null) {\n    return '';\n  }\n\n  var parts = [];\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(attrs); _i3 < _Object$keys3.length; _i3++) {\n    var name = _Object$keys3[_i3];\n    var value = attrs[name];\n\n    if (value != null) {\n      parts.push(\" \".concat(name, \"=\\\"\").concat(encodeAttr(value + ''), \"\\\"\"));\n    }\n  }\n\n  return parts.join('');\n}\n\nfunction canHaveDepth(blockType) {\n  switch (blockType) {\n    case BLOCK_TYPE.UNORDERED_LIST_ITEM:\n    case BLOCK_TYPE.ORDERED_LIST_ITEM:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction encodeContent(text) {\n  return text.split('&').join('&amp;').split('<').join('&lt;').split('>').join('&gt;').split('\\xA0').join('&nbsp;').split('\\n').join(BREAK + '\\n');\n}\n\nfunction encodeAttr(text) {\n  return text.split('&').join('&amp;').split('<').join('&lt;').split('>').join('&gt;').split('\"').join('&quot;');\n}\n\nexport default function stateToHTML(content, options) {\n  return new MarkupGenerator(content, options).generate();\n}"],
  "mappings": "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",
  "names": ["ownKeys", "_objectSpread", "_defineProperty", "_slicedToArray", "_arrayWithHoles", "_iterableToArrayLimit", "_nonIterableRest", "MarkupGenerator", "text", "content", "element", "attributes", "styleAttr", "attrString"]
}
